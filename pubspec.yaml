name: satujuta_app_mobile
description: A new Flutter project.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=2.18.5 <3.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter
  satujuta_gql_client: 
    path: ../satujuta-gql-client
  cupertino_icons: ^1.0.2
  file_picker: ^5.2.5
  open_filex: ^4.3.2
  flutter_secure_storage: ^8.0.0
  provider: ^6.0.5
  get_it: ^7.2.0
  path_provider: ^2.0.14
  intl: ^0.18.0
  location: ^4.4.0
  connectivity: ^3.0.6
  internet_connection_checker: ^1.0.0+1
  firebase_core: ^2.10.0
  firebase_messaging: ^14.4.1
  image_cropper: ^3.0.2
  flutter_local_notifications: ^14.1.0
  package_info_plus: ^3.1.0
  permission_handler: ^10.2.0
  logger: ^1.3.0
  url_launcher: ^6.1.7
  http: ^0.13.6
  # ferry_flutter: ^0.8.1
  graphql_flutter: ^5.1.2
  jwt_decode: ^0.3.1
  photo_view: ^0.14.0
  optimized_cached_image: ^3.0.1
  syncfusion_flutter_charts: ^22.2.5
  flutter_image_slideshow: ^0.1.6
  flutter_rating_bar: ^4.0.1
  easy_sidemenu: ^0.5.0
  webview_flutter: ^4.2.2
  


dev_dependencies:
  flutter_test:
    sdk: flutter
  build_runner: ^2.4.6
  # ferry_generator: ^0.8.1

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/images/bank/
    - assets/images/ewallet/
    - assets/images/empty-emoji.png
    - assets/images/hotel-image.png
    - assets/images/merchant/
    - assets/images/photos/
    - assets/logo/
    - assets/ilustration/
    - assets/background/
    - assets/background/user/
    - assets/icons/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Plus Jakarta Sans
      fonts:
        - asset: assets/fonts/PlusJakartaSans-ExtraBold.ttf
          weight: 800
        - asset: assets/fonts/PlusJakartaSans-Bold.ttf
          weight: 700
        - asset: assets/fonts/PlusJakartaSans-SemiBold.ttf
          weight: 600
        - asset: assets/fonts/PlusJakartaSans-Medium.ttf
          weight: 500
        - asset: assets/fonts/PlusJakartaSans-Regular.ttf
          weight: 400
        - asset: assets/fonts/PlusJakartaSans-Light.ttf
          weight: 300
          
    - family:  CustomIcon
      fonts:
        - asset: assets/fonts/CustomIcon.ttf
      
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
